name: Build Linux AppImage

on:
  release:
    types: [published]

jobs:
  linux-x64:
    name: Build Linux AppImage (x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.1"
          channel: stable

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            libgtk-3-dev \
            libsecret-1-dev \
            liblzma-dev \
            libstdc++-12-dev \
            libfuse2 \
            wget \
            file

      - name: Flutter version
        run: flutter --version

      - name: Flutter doctor
        run: flutter doctor

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get project version
        id: get_version
        run: |
          VERSION=$(grep "version:" pubspec.yaml | awk '{print $2}' | sed 's/+.*//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project version: $VERSION"

      - name: Make build script executable
        run: chmod +x scripts/build_appimage.sh

      - name: Run AppImage build script for x86_64
        run: ./scripts/build_appimage.sh

      - name: Verify x86_64 AppImage creation
        run: |
          if [ -f build/linux/x64/release/appimage/Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage ]; then
            echo "x86_64 AppImage created successfully!"
            ls -la build/linux/x64/release/appimage/
          else
            echo "Error: x86_64 AppImage not found!"
            exit 1
          fi
          echo "x86_64 AppImage found and ready for upload"
          ls -la build/linux/x64/release/appimage/

      - name: Test build complete (manual dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "üéâ Manual test build completed successfully!"
          echo "üì¶ AppImage: build/linux/x64/release/appimage/Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage"
          echo "üîê Checksum: $(cat build/linux/x64/release/appimage/Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage.sha256 | cut -d' ' -f1)"
          echo "‚ÑπÔ∏è  This was a test build - no files were uploaded to release."

      - name: Upload x86_64 AppImage to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/linux/x64/release/appimage/Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage
          asset_name: Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage
          asset_content_type: application/octet-stream

      - name: Upload x86_64 AppImage checksum to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/linux/x64/release/appimage/Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage.sha256
          asset_name: Pocket2FA-${{ steps.get_version.outputs.version }}-x86_64.AppImage.sha256
          asset_content_type: text/plain
