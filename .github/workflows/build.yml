name: CI - Build Flutter targets

on:
  workflow_dispatch:
#   push:
#     branches: [ main ]
#   pull_request:

jobs:
  android:
    name: Build Android (AAB)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Pub & Dart tool
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Install dependencies
        run: flutter pub get

      - name: Detect KEYSTORE_BASE64 presence
        id: detect_keystore
        shell: bash
        run: |
          if [[ -n "${{ secrets.KEYSTORE_BASE64 }}" ]]; then
            echo "has_keystore=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_keystore=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Download keystore
        if: steps.detect_keystore.outputs.has_keystore == 'true'
        shell: bash
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          set -euo pipefail
          mkdir -p android/app
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/keystore.jks

      - name: Set signing environment variables
        if: steps.detect_keystore.outputs.has_keystore == 'true'
        shell: bash
        run: |
          cd android/app
          chmod 600 keystore.jks
          echo "KEYSTORE_PATH=$(pwd)/keystore.jks" >> "$GITHUB_ENV"
          cd ../..
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> "$GITHUB_ENV"
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> "$GITHUB_ENV"
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> "$GITHUB_ENV"

      - name: Build split-per-ABI APKs
        if: steps.detect_keystore.outputs.has_keystore == 'true'
        shell: bash
        run: flutter build apk --release --split-per-abi

      - name: Build universal APK (all ABIs in one)
        if: steps.detect_keystore.outputs.has_keystore == 'true'
        shell: bash
        run: flutter build apk --release

      - name: Verify APKs were built
        shell: bash
        run: |
          echo "Checking for built APKs..."
          ls -lh build/app/outputs/flutter-apk/

      - name: Upload Android artifact
        if: steps.detect_keystore.outputs.has_keystore == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: android-appbundle
          path: build/app/outputs/bundle/release/
#   linux:
#     name: Build Linux (desktop)
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: '3.35.1'
#           channel: 'stable'

#       - name: Install native build deps
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y cmake ninja-build libgtk-3-dev libatk1.0-dev libgdk-pixbuf2.0-dev libasound2-dev libsecret-1-dev

#       - name: Cache Pub & Dart tool
#         uses: actions/cache@v4
#         with:
#           path: |
#             ~/.pub-cache
#             .dart_tool
#           key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

#       - name: Get packages
#         run: flutter pub get

#       - name: Ensure native assets directory exists
#         run: |
#           mkdir -p build/native_assets/linux

#       - name: Build Linux bundle (release)
#         run: flutter build linux --release

#       - name: Upload Linux artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: linux-bundle
#           path: build/linux/x64/release/bundle/

# windows:
#   name: Build Windows (desktop)
#   runs-on: windows-latest
#   steps:
#     - uses: actions/checkout@v4

#     - name: Set up Flutter
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: '3.35.1'
#         channel: 'stable'

#     - name: Cache Pub & Dart tool
#       uses: actions/cache@v4
#       with:
#         path: |
#           %USERPROFILE%\\AppData\\Local\\Pub\Cache
#           .dart_tool
#         key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

#     - name: Get packages
#       run: flutter pub get

#     - name: Build Windows (release)
#       run: flutter build windows --release

#     - name: Upload Windows artifact
#       uses: actions/upload-artifact@v4
#       with:
#         name: windows-build
#         path: build\\windows\\runner\\Release\\
